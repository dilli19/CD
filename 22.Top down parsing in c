#include <stdio.h>
#include <ctype.h>

// Function prototypes
int expr();
int term();
int factor();

// Global variables
char input[100];
int position = 0;

int main() {
    printf("Enter an arithmetic expression: ");
    fgets(input, sizeof(input), stdin);

    if (expr() && input[position] == '\0') {
        printf("Parsing successful.\n");
    } else {
        printf("Parsing error.\n");
    }

    return 0;
}

// Top-down parsing functions
int expr() {
    return term() && exprTail();
}

int exprTail() {
    if (input[position] == '+' || input[position] == '-') {
        char op = input[position++];
        return term() && exprTail();
    }
    return 1; // epsilon
}

int term() {
    return factor() && termTail();
}

int termTail() {
    if (input[position] == '*' || input[position] == '/') {
        char op = input[position++];
        return factor() && termTail();
    }
    return 1; // epsilon
}

int factor() {
    if (isdigit(input[position])) {
        position++; // Consume digit
        return 1;
    } else if (input[position] == '(') {
        position++; // Consume '('
        if (expr() && input[position] == ')') {
            position++; // Consume ')'
            return 1;
        }
    }
    return 0;
}
